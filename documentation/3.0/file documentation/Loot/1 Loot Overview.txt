Salt and Sanctuary: Desalinated
Last Updated for 3.0.0
by Zephyrus Greene






Loot Overview

------------------------------------------------------------------------------------------------------------------------------------------
The original reason the mod was made -- better, cooler, and more interesting loot!
If you haven't already, be sure to read the Affix documentation.

In the original game all loot items were in one large binary file.
Loot is now broken down by category in multiple files: Weapons, Magics, Armors, Shields, Consumables, etc.
This framework grants the user a significant amount of customization and control over the character, rules, damages, and items. 

Do not delete or rearrange any entries that exist!
Modify it, remove it from the world, but just don't delete any.

------------------------------------------------------------------------------------------------------------------------------------------
Loot Fields

Each loot item contains all the same fields whether its a key or a weapon.
To remove clutter, unused fields are not present in files that do not use them.

In this overview I will list all the fields and describe them.
Major fields will be further expanded afterwards.

------------------------------------------------------------------------------------------------------------------------------------------

Title				| Display name based on localization (language settings)
Descript			| In game description based on localization.
Name 				| Item's internal name | Used for referencing items in data files.
Type				| Item's type by name. Types are category dependent.
UpgradeFactor  		| Value multiplier per rank | Where 1.10 = +10% | Rank 7 is 1.10^7 = +94.8%
UpgradeType			| Upgrade type by group name. | See /helpers/lootupgrades.sjson
InventoryImage		| In game image file. | HUD and inventory only.
Texture				| Visual texture used for the item while worn. | CharmIcon
CosmeticFlag		| Controls certain cosmetic properties on armors. | Weapons use it for CharmMove
Weight 				| Weight of the item. How much Equip-Load it consumes.
GoldCost			| How much gold the item costs.
WeaponShieldLink 	| The name of the shield used by a weapon for blocking and parrying.
WeaponSpellDamage	| Weapon's base damage for using spells. | Scales from physical stat scaling only.
WeaponDamage 		| Damage per type. Uses comma separated values for min and max damage | "5,10" means 5-10 damage.
ArmorDefense 		| Defense per type. | Damage reduction is calculated as Armor / (Armor + 200)
StatScalingPhysical	| Physical stat scaling for weapon damage. | Now includes red color coding in game.
StatScalingElemental| Elemental stat scaling for weapon damage. | Now includes purple color coding in game.
LootAffixes 		| A list of Affixes attached to the item. | No significant limit on number of Affixes.
ParryTime			| Duration during which attacks are parried. | A shorter timer makes parrying harder.
ParryAnim 			| Name of animation used for Parry. | Defaults: "parry", "shieldsmash" | Battlestaff uses "hpdstrong"
Requirements		| Levels and names of skills required to use item. | Class Ranks are purely for UI
TransmutePath		| Items and salt required to craft this item at the alchemist NPC.
SwooshColors		| Colors to use for melee attack overlay (arcing swoosh) | Contains 3 visual layers.
SpellFocusCost		| The base mana (focus) cost of Magics.
SpellStaminaCost 	| The base stamina cost of Magics.
SpellElemBal 		| The value of imbalance caused by lightning and fire magics. | Also used for corruption from blood magic.
IsHeavyArmor 		| True = Counts as heavy armor
MissileName 		| The name of a missile in missiles.sjson.
ConsumeSubtype 		| Differentiates Throwing, Self-Buff, Ammo, Enchants and Barrage effects.
ConsumeDepletes 	| Whether or not this item is reduced on usage. False = Infinite ammo, etc.




WIP below here


------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------
StatScaling

Stat scaling scales the damage of specific items. It follows an adjusted scaling formula.
Damage stats follow a soft scaling mechanic. The stat scaling is now dynamic to this setting (See Rules).
A value of 1.0 means that the damage of a given item scales to +100% over the given stats soft stat max (softCap).
------------------------------------------------------------------------------------------------------------------------------------------
Some Custom Things

Fists_Base is a weapon that controls fist damage. It should be able to use Affixes, but not entirely tested.
			It has a stat scaling that is quite high (49.0) in attempt to follow the original scaling.
			Fist damage can be modified to whatever you wish, including having elemental damage.
	
BashDamage is found on shields. Shield bashes in the original game followed the values as fists did. So here
			it follows the same scaling as fists do (49.0). This can be modified on a per shield basis.
			Bash Damage is the base damage and if using a real shield will scale off the shield's rank. 
			When using a weapon it will scale off the weapon's rank (see below).
			
WeaponShieldName is found on all weapons. Only weapons that can block or parry can use this. It uses this 
			identifier for block defense, bash damage, parry window, and parry animation. You can use "parry"
			or "shieldsmash" as the animation here. This can allow any weapon to smash/bash as an extra attack!
			This means a Battlestaff or backhanded fist slap are possible to build. Visually it still looks like swinging a shield.
			
Gunblades use an Affix that uses the property field to a pistol (flintlock) weapon. Only weapons using the gunblade
			numeric Type will look for this information. Rank will scale from the gunblade itself, but stat scaling 
			and base damage will come from the pistol. Affixes are not read from the referenced Pistol.