Salt and Sanctuary: Desalinated 2.1.0+
by Zephyr Greene


Loot Overview

------------------------------------------------------------------------------------------------------------------------------------------
Intro

This is why we are here. We want better, neater, and trickier loot!
This is the ultimate purpose of the mod. To create new items and slap fancy Affixes on them.

If you haven't already, be sure to read the Affixes documentation.

------------------------------------------------------------------------------------------------------------------------------------------
Overview

In the original game all loot items were in one large binary file. The game was not intended to be modified, but someone built a tool to 
transform that data from binary to xml and then back again. Many balance mods used that feature. It is no longer necessary in this mod to 
constantly export and import. This mod (framework) grants the user a significant amount of customization and control over the character, 
rules, damages, and items. 

Note that some things will work differently than the original game as major structures have either been rebuilt 
or are brand new system entirely.

And absolutely DO NOT delete anything that exists! Modify it if you wish, just don't delete.

------------------------------------------------------------------------------------------------------------------------------------------
Loot Fields

The binary loot file has been broken into distinct files now: Weapons, Magics, Armors, Shields, Consumables, etc. Each loot item has the 
same fields, but they do not all use those fields. To remove clutter, unused fields are hidden in these files. 

In this overview I will list ALL the fields and describe them. In individual category files, I will describe them for that category only.

Category 			| Originally used to separate the groups, now used further for each file. (Don't change these)
Type				| Denotes the type by integer | Functions on a per category basis.
Upgrade 			| Controls category of items for upgrading.
UpgradeFac  		| Value multiplier per rank | 1.10 = 10% | Rank 7 = 1.10^7
Name 				| Internal name | Also used for referencing items/other in data files.
Title				| Display name based on localization (language settings)
Desc				| In game description based on localization.
Img					| In game image file. | HUD and inventory only.
Texture				| Visual texture used for item while equipped.
Flags 				| Used for a few original affix-like effects and cosmetic alterations.
Special 			| Preserved for a few original affix-like effects.
Weight 				| Weight of the item. How much Equip/Load it consumes.
WeaponDamage 		| Damage per damage type via a range. | "5,10" means random between 5-10 damage 
ArmorDefense 		| Defense per damage type from the item.
LootAffixes 		| List/Collection of Affixes attached to the item.
Parry 				| How long the parry window lasts. Shields only. | Shorter = harder
ParryAnim 			| Which Parry Animation the item uses. Shields only.
WeaponShieldName 	| The name of the shield for values used when blocking.
WeaponSpellStrength	| Acts as Base Weapon Damage for calculating Magic Damage.
SpellType 			| Denotes original elemental type of magics. (Holy, Fire, Lightning)
SpellBaseVal 		| Deprecated. Does nothing. 
SpellFocusCost		| The base focus (mana) cost of Magics.
SpellStaminaCost 	| The base stamina cost of Magics.
SpellElemBal 		| The value of imbalance caused by magics. Also used for bloodmagic.
SpellProjectileCount| Deprecated. Does nothing.
IsHeavyArmor 		| True = Counts as heavy armor | False = Light armor
MissileName 		| The name of a missile in missiles.sjson.
ConsumeSubtype 		| Differentiates Throwing, Self-Buff, Ammo, Enchants and Barrage effects.
ConsumeSound 		| The internal name of a sound. Triggers at beginning of use. | YMMV
CosmeticIcon 		| Used for charm image (texture).
ConsumeDepletes 	| Whether or not this item is reduced on usage. False = Infinite ammo, etc.
StatScaling			| Scaling for each stat. Scaling now affects the base damage evenly.
EquipReqs			| Levels for primary and secondary requirements. (levels only not item classes)
SwooshColors		| Colors to use for melee attack overlay (arcing swoosh)
UpgradePath			| Items used to transmute this item.
GoldValue			| How much gold the item costs
Durability			| Ignore this. Used for Torches and maybe more.
TexIdx 				| Special texture 1. I wouldn't advise messing with these.
TexIdx2				| Special texture 2. I wouldn't advise messing with these.

------------------------------------------------------------------------------------------------------------------------------------------
Upgrade Groups
  
UPGRADE_NORMAL = 0													UPGRADE_NONE = 3
UPGRADE_KRAEKAN = 1													UPGRADE_BLUE_DROWNED = 4
UPGRADE_RED_CARBON = 2												UPGRADE_BEASTLY = 5

------------------------------------------------------------------------------------------------------------------------------------------
StatScaling

Stat scaling scales the damage of specific items. It follows an adjusted scaling formula.
Damage stats follow a soft scaling mechanic. The stat scaling is now dynamic to this setting (See Rules).
A value of 1.0 means that the damage of a given item scales to +100% over the given stats soft stat max (softCap).
------------------------------------------------------------------------------------------------------------------------------------------
Some Custom Things

Fists_Base is a weapon that controls fist damage. It should be able to use Affixes, but not entirely tested.
			It has a stat scaling that is quite high (49.0) in attempt to follow the original scaling.
			Fist damage can be modified to whatever you wish, including having elemental damage.
	
BashDamage is found on shields. Shield bashes in the original game followed the values as fists did. So here
			it follows the same scaling as fists do (49.0). This can be modified on a per shield basis.
			Bash Damage is the base damage and if using a real shield will scale off the shield's rank. 
			When using a weapon it will scale off the weapon's rank (see below).
			
WeaponShieldName is found on all weapons. Only weapons that can block or parry can use this. It uses this 
			identifier for block defense, bash damage, parry window, and parry animation. You can use "parry"
			or "shieldsmash" as the animation here. This can allow any weapon to smash/bash as an extra attack!
			This means a Battlestaff or backhanded fist slap are possible to build. Visually it still looks like swinging a shield.
			
Gunblades use an Affix that uses the property field to a pistol (flintlock) weapon. Only weapons using the gunblade
			numeric Type will look for this information. Rank will scale from the gunblade itself, but stat scaling 
			and base damage will come from the pistol. Affixes are not read from the referenced Pistol.